{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 357acf8cddc7a4c17a9e","webpack:///./grapher.js","webpack:///./renderers/gl/renderer.js","webpack:///./renderers/gl/shaders/link.vert.js","webpack:///./renderers/gl/shaders/link.frag.js","webpack:///./renderers/gl/shaders/node.vert.js","webpack:///./renderers/gl/shaders/node.frag.js","webpack:///./renderers/renderer.js","webpack:///../~/webpack/buildin/module.js","webpack:///./renderers/canvas/renderer.js","webpack:///./helpers/color.js","webpack:///./helpers/link.js","webpack:///./helpers/node.js","webpack:///./helpers/shaders.js","webpack:///./helpers/utilities.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;;AAE7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,0EAAyE,wBAAwB,EAAE;AACnG,8EAA6E,4BAA4B,EAAE;AAC3G;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,8CAA8C;AACjE,oBAAmB,2CAA2C;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,6BAA6B,EAAE;AACxE;;AAEA;AACA;AACA,0CAAyC,6BAA6B,EAAE;AACxE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB,iCAAgC;AAChC,uCAAsC;AACtC,mDAAkD;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,qBAAqB;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;;AAEZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA6B,+BAA+B;AAC5D;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sDAAqD,oCAAoC;;AAEzF,sDAAqD,oCAAoC;;AAEzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,cAAa,cAAc;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO,sFAAsF;AAC7F,cAAa,WAAW;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACzmBA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,wBAAuB;AACvB;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAC;;AAED;;;;;;;;;;ACzNA;AACA;AACA,6BAA4B;AAC5B,6BAA4B;AAC5B,yBAAwB;AACxB,qBAAoB;AACpB,gBAAe;AACf,4DAA2D;AAC3D,uDAAsD;AACtD,2BAA0B;AAC1B,IAAG,E;;;;;;;;;ACVH;AACA;AACA,2BAA0B;AAC1B,qBAAoB;AACpB,gBAAe;AACf,yBAAwB;AACxB,IAAG;;;;;;;;;;ACNH;AACA;AACA,6BAA4B;AAC5B,6BAA4B;AAC5B,yBAAwB;AACxB,2BAA0B;AAC1B,4BAA2B;AAC3B,qBAAoB;AACpB,uBAAsB;AACtB,2BAA0B;AAC1B,wBAAuB;AACvB,gBAAe;AACf,4DAA2D;AAC3D,uDAAsD;AACtD,2BAA0B;AAC1B,uBAAsB;AACtB,uBAAsB;AACtB,+BAA8B;AAC9B,IAAG,E;;;;;;;;;AClBH;AACA;AACA,2BAA0B;AAC1B,qBAAoB;AACpB,uBAAsB;AACtB,2BAA0B;AAC1B,wBAAuB;AACvB,gBAAe;AACf,4CAA2C;AAC3C,8BAA6B;AAC7B,8CAA6C;AAC7C,8BAA6B;AAC7B,8BAA6B;AAC7B,8CAA6C;AAC7C,oCAAmC;AACnC;AACA,2BAA0B;AAC1B;AACA,kEAAiE;AACjE;AACA,6BAA4B;AAC5B,IAAG,E;;;;;;;;;ACrBH,gDAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;AACL,iCAAgC,0BAA0B,EAAE;AAC5D,iCAAgC,0BAA0B,EAAE;AAC5D,iCAAgC,oBAAoB,EAAE;AACtD,yCAAwC,4BAA4B,EAAE;AACtE,+BAA8B,2CAA2C,EAAE;AAC3E,+BAA8B,2CAA2C,EAAE;AAC3E,iCAAgC,6CAA6C,EAAE;AAC/E,iCAAgC,6CAA6C,EAAE;AAC/E;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,EAAC;;;;;;;;;;;ACvFD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACTA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,qBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,qBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;;;;;;;;;AC/CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AChBA,gDAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAC;;;;;;;;;;;AC7BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,iCAAiC;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"grapher.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Grapher\"] = factory();\n\telse\n\t\troot[\"Grapher\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 357acf8cddc7a4c17a9e\n **/","// Ayasdi Inc. Copyright 2014\n// Grapher.js may be freely distributed under the Apache 2.0 license\n\n/**\n  * Grapher\n  * =======\n  * WebGL network grapher rendering with PIXI\n  */\nfunction Grapher () {\n  this.initialize.apply(this, arguments);\n  return this;\n}\n\n/**\n  * Helpers and Renderers\n  * =====================\n  * Load helpers and renderers.\n  */\nvar WebGLRenderer = Grapher.WebGLRenderer = require('./renderers/gl/renderer.js'),\n    CanvasRenderer = Grapher.CanvasRenderer = require('./renderers/canvas/renderer.js'),\n    Color = Grapher.Color = require('./helpers/color.js'),\n    Link = Grapher.Link = require('./helpers/link.js'),\n    Node = Grapher.Node = require('./helpers/node.js'),\n    Shaders = Grapher.Shaders = require('./helpers/shaders.js'),\n    u = Grapher.utils = require('./helpers/utilities.js'),\n    grey = [34, 34, 34, 255]; // #222222\n\nGrapher.prototype = {};\n\n/**\n  * grapher.initialize\n  * ------------------\n  *\n  * Initialize is called when a grapher instance is created:\n  *\n  *     var grapher = new Grapher(width, height, options);\n  *\n  */\nGrapher.prototype.initialize = function (o) {\n  if (!o) o = {};\n\n  // Extend default properties with options\n  this.props = u.extend({\n    color: grey,\n    scale: 1,\n    translate: [0, 0],\n    resolution: window.devicePixelRatio || 1\n  }, o);\n\n  if (!o.canvas) this.props.canvas = document.createElement('canvas');\n  this.canvas = this.props.canvas;\n\n  var webGL = this._getWebGL();\n  if (webGL) {\n    this.props.webGL = webGL;\n    this.props.canvas.addEventListener('webglcontextlost', function (e) { this._onContextLost(e); }.bind(this));\n    this.props.canvas.addEventListener('webglcontextrestored', function (e) { this._onContextRestored(e); }.bind(this));\n    this.props.linkShaders = new Shaders(this.props.linkShaders);\n    this.props.nodeShaders = new Shaders(this.props.nodeShaders);\n  }\n\n  // Renderer and view\n  this.renderer =  webGL ? new WebGLRenderer(this.props) : new CanvasRenderer(this.props);\n  this.rendered = false;\n\n  // Sprite array\n  this.links = [];\n  this.nodes = [];\n\n  this.renderer.setLinks(this.links);\n  this.renderer.setNodes(this.nodes);\n\n  // Indices that will update\n  this.willUpdate = {};\n  this.updateAll = {};\n  this._clearUpdateQueue();\n\n  // Bind some updaters\n  this._updateLink = u.bind(this._updateLink, this);\n  this._updateNode = u.bind(this._updateNode, this);\n  this._updateLinkByIndex = u.bind(this._updateLinkByIndex, this);\n  this._updateNodeByIndex = u.bind(this._updateNodeByIndex, this);\n  this.animate = u.bind(this.animate, this);\n\n  // Event Handlers\n  this.handlers = {};\n\n  // Do any additional setup\n  u.eachKey(o, this.set, this);\n};\n\n/**\n  * grapher.set\n  * ------------------\n  *\n  * General setter for a grapher's properties.\n  *\n  *     grapher.set(1, 'scale');\n  */\nGrapher.prototype.set = function (val, key) {\n  var setter = this[key];\n  if (setter && u.isFunction(setter))\n    return setter.call(this, val);\n};\n\n/**\n  * grapher.on\n  * ------------------\n  *\n  * Add a listener to a grapher event. Only one listener can be bound to an\n  * event at this time. Available events:\n  *\n  *   * mousedown\n  *   * mouseover\n  *   * mouseup\n  */\nGrapher.prototype.on = function (event, fn) {\n  this.handlers[event] = this.handlers[event] || [];\n  this.handlers[event].push(fn);\n  this.canvas.addEventListener(event, fn, false);\n  return this;\n};\n\n/**\n  * grapher.off\n  * ------------------\n  *\n  * Remove a listener from an event, or all listeners from an event if fn is not specified.\n  */\nGrapher.prototype.off = function (event, fn) {\n  var removeHandler = u.bind(function (fn) {\n    var i = u.indexOf(this.handlers[event], fn);\n    if (i > -1) this.handlers[event].splice(i, 1);\n    this.canvas.removeEventListener(event, fn, false);\n  }, this);\n\n  if (fn && this.handlers[event]) removeHandler(fn);\n  else if (u.isUndefined(fn) && this.handlers[event]) u.each(this.handlers[event], removeHandler);\n\n  return this;\n};\n\n/**\n  * grapher.data\n  * ------------------\n  *\n  * Accepts network data in the form:\n  *\n  *     {\n  *       nodes: [{x: 0, y: 0, r: 20, color: (swatch or hex/rgb)}, ... ],\n  *       links: [{from: 0, to: 1, color: (swatch or hex/rgb)}, ... ]\n  *     }\n  */\nGrapher.prototype.data = function (data) {\n  if (u.isUndefined(data)) return this.props.data;\n\n  this.props.data = data;\n  this.exit();\n  this.enter();\n  this.update();\n\n  return this;\n};\n\n/**\n  * grapher.enter\n  * ------------------\n  *\n  * Creates node and link sprites to match the number of nodes and links in the\n  * data.\n  */\nGrapher.prototype.enter = function () {\n  var data = this.data();\n  if (this.links.length < data.links.length) {\n    var links = data.links.slice(this.links.length, data.links.length);\n    u.eachPop(links, u.bind(function () { this.links.push(new Link()); }, this));\n  }\n\n  if (this.nodes.length < data.nodes.length) {\n    var nodes = data.nodes.slice(this.nodes.length, data.nodes.length);\n    u.eachPop(nodes, u.bind(function () { this.nodes.push(new Node()); }, this));\n  }\n\n  return this;\n};\n\n/**\n  * grapher.exit\n  * ------------------\n  *\n  * Removes node and link sprites to match the number of nodes and links in the\n  * data.\n  */\nGrapher.prototype.exit = function () {\n  var data = this.data();\n\n  if (data.links.length < this.links.length) {\n    this.links.splice(data.links.length, this.links.length - data.links.length);\n  }\n  if (data.nodes.length < this.nodes.length) {\n    this.nodes.splice(data.nodes.length, this.nodes.length - data.nodes.length);\n  }\n\n  return this;\n};\n\n/**\n  * grapher.update\n  * ------------------\n  *\n  * Add nodes and/or links to the update queue by index. Passing in no arguments will\n  * add all nodes and links to the update queue. Node and link sprites in the update\n  * queue are updated at the time of rendering.\n  *\n  *     grapher.update(); // updates all nodes and links\n  *     grapher.update('links'); // updates only links\n  *     grapher.update('nodes', 0, 4); // updates nodes indices 0 to 3 (4 is not inclusive)\n  *     grapher.update('links', [0, 1, 2, 6, 32]); // updates links indexed by the indices\n  */\nGrapher.prototype.update = function (type, start, end) {\n  var indices;\n  if (u.isArray(start)) indices = start;\n  else if (u.isNumber(start) && u.isNumber(end)) indices = u.range(start, end);\n\n  if (u.isArray(indices)) {\n    this._addToUpdateQueue(type, indices);\n    if (type === NODES) this._addToUpdateQueue(LINKS, this._findLinks(indices));\n  } else {\n    if (type !== NODES) this.updateAll.links = true;\n    if (type !== LINKS) this.updateAll.nodes = true;\n  }\n  return this;\n};\n\n/**\n  * grapher.updateNode\n  * ------------------\n  *\n  * Add an individual node to the update queue. Optionally pass in a boolean to\n  * specify whether or not to also add links connected with the node to the update queue.\n  */\nGrapher.prototype.updateNode = function (index, willUpdateLinks) {\n  this._addToUpdateQueue(NODES, [index]);\n  if (willUpdateLinks) this._addToUpdateQueue(LINKS, this._findLinks([index]));\n  return this;\n};\n\n/**\n  * grapher.updateLink\n  * ------------------\n  *\n  * Add an individual link to the update queue.\n  */\nGrapher.prototype.updateLink = function (index) {\n  this._addToUpdateQueue(LINKS, [index]);\n  return this;\n};\n\n/**\n  * grapher.clear\n  * ------------------\n  *\n  * Clears the canvas and grapher data.\n  */\nGrapher.prototype.clear = function () {\n  this.data({links: [], nodes: []});\n  this.render();\n  return this;\n};\n\n/**\n  * grapher.render\n  * ------------------\n  *\n  * Updates each sprite and renders the network.\n  */\nGrapher.prototype.render = function () {\n  this.rendered = true;\n  this._update();\n  this.renderer.render();\n  return this;\n};\n\n/**\n  * grapher.animate\n  * ------------------\n  *\n  * Calls render in a requestAnimationFrame loop.\n  */\nGrapher.prototype.animate = function () {\n  this.render();\n  this.currentFrame = requestAnimationFrame(this.animate);\n};\n\n/**\n  * grapher.play\n  * ------------------\n  *\n  * Starts the animate loop.\n  */\nGrapher.prototype.play = function () {\n  this.currentFrame = requestAnimationFrame(this.animate);\n  return this;\n};\n\n/**\n  * grapher.pause\n  * ------------------\n  *\n  * Pauses the animate loop.\n  */\nGrapher.prototype.pause = function () {\n  if (this.currentFrame) cancelAnimationFrame(this.currentFrame);\n  this.currentFrame = null;\n  return this;\n};\n\n/**\n  * grapher.resize\n  * ------------------\n  *\n  * Resize the grapher view.\n  */\nGrapher.prototype.resize = function (width, height) {\n  this.renderer.resize(width, height);\n  return this;\n};\n\n/**\n  * grapher.width\n  * ------------------\n  *\n  * Specify or retrieve the width.\n  */\nGrapher.prototype.width = function (width) {\n  if (u.isUndefined(width)) return this.canvas.clientWidth;\n  this.resize(width, null);\n  return this;\n};\n\n /**\n  * grapher.height\n  * ------------------\n  *\n  * Specify or retrieve the height.\n  */\nGrapher.prototype.height = function (height) {\n  if (u.isUndefined(height)) return this.canvas.clientHeight;\n  this.resize(null, height);\n  return this;\n};\n\n/**\n  * grapher.transform\n  * ------------------\n  *\n  * Set the scale and translate as an object.\n  * If no arguments are passed in, returns the current transform object.\n  */\nGrapher.prototype.transform = function (transform) {\n  if (u.isUndefined(transform))\n    return {scale: this.props.scale, translate: this.props.translate};\n\n  this.scale(transform.scale);\n  this.translate(transform.translate);\n  return this;\n};\n\n/**\n  * grapher.scale\n  * ------------------\n  *\n  * Set the scale.\n  * If no arguments are passed in, returns the current scale.\n  */\nGrapher.prototype.scale = function (scale) {\n  if (u.isUndefined(scale)) return this.props.scale;\n  if (u.isNumber(scale)) this.props.scale = scale;\n  this.updateTransform = true;\n  return this;\n};\n\n/**\n  * grapher.translate\n  * ------------------\n  *\n  * Set the translate.\n  * If no arguments are passed in, returns the current translate.\n  */\nGrapher.prototype.translate = function (translate) {\n  if (u.isUndefined(translate)) return this.props.translate;\n  if (u.isArray(translate)) this.props.translate = translate;\n  this.updateTransform = true;\n  return this;\n};\n\n/**\n  * grapher.color\n  * ------------------\n  *\n  * Set the default color of nodes and links.\n  * If no arguments are passed in, returns the current default color.\n  */\nGrapher.prototype.color = function (color) {\n  if (u.isUndefined(color)) return this.props.color;\n  this.props.color = color;\n  return this;\n};\n\n/**\n  * grapher.getDataPosition\n  * ------------------\n  *\n  * Returns data space coordinates given display coordinates.\n  * If a single argument passed in, function considers first argument an object with x and y props.\n  */\nGrapher.prototype.getDataPosition = function (x, y) {\n  var xCoord = u.isUndefined(y) ? x.x : x;\n  var yCoord = u.isUndefined(y) ? x.y : y;\n  x = this.renderer.untransformX(xCoord);\n  y = this.renderer.untransformY(yCoord);\n  return {x: x, y: y};\n};\n\n/**\n  * grapher.getDisplayPosition\n  * ------------------\n  *\n  * Returns display space coordinates given data coordinates.\n  * If a single argument passed in, function considers first argument an object with x and y props.\n  */\nGrapher.prototype.getDisplayPosition = function (x, y) {\n  var xCoord = u.isUndefined(y) ? x.x : x;\n  var yCoord = u.isUndefined(y) ? x.y : y;\n  x = this.renderer.transformX(xCoord);\n  y = this.renderer.transformY(yCoord);\n  return {x: x, y: y};\n};\n\n/**\n  * Private Functions\n  * =================\n  */\n\n/**\n  * grapher._addToUpdateQueue\n  * -------------------\n  *\n  * Add indices to the nodes or links update queue.\n  *\n  */\nGrapher.prototype._addToUpdateQueue = function (type, indices) {\n  var willUpdate = type === NODES ? this.willUpdate.nodes : this.willUpdate.links,\n      updateAll = type === NODES ? this.updateAll.nodes : this.updateAll.links,\n      spriteSet = type === NODES ? this.nodes : this.links;\n\n  var insert = function (n) { u.uniqueInsert(willUpdate, n); };\n  if (!updateAll && u.isArray(indices)) u.each(indices, insert, this);\n\n  updateAll = updateAll || willUpdate.length >= spriteSet.length;\n\n  if (type === NODES) this.updateAll.nodes = updateAll;\n  else this.updateAll.links = updateAll;\n};\n\n/**\n  * grapher._clearUpdateQueue\n  * -------------------\n  *\n  * Clear the update queue.\n  *\n  */\nGrapher.prototype._clearUpdateQueue = function () {\n  this.willUpdate.links = [];\n  this.willUpdate.nodes = [];\n  this.updateAll.links = false;\n  this.updateAll.nodes = false;\n  this.updateTransform = false;\n};\n\n/**\n  * grapher._update\n  * -------------------\n  *\n  * Update nodes and links in the update queue.\n  *\n  */\nGrapher.prototype._update = function () {\n  var updatingLinks = this.willUpdate.links,\n      updatingNodes = this.willUpdate.nodes;\n\n  if (this.updateAll.links) u.each(this.links, this._updateLink);\n  else if (updatingLinks && updatingLinks.length) u.eachPop(updatingLinks, this._updateLinkByIndex);\n\n  if (this.updateAll.nodes) u.each(this.nodes, this._updateNode);\n  else if (updatingNodes && updatingNodes.length) u.eachPop(updatingNodes, this._updateNodeByIndex);\n\n  if (this.updateTransform) {\n    this.renderer.setScale(this.props.scale);\n    this.renderer.setTranslate(this.props.translate);\n  }\n\n  this._clearUpdateQueue();\n};\n\nGrapher.prototype._updateLink = function (link, i) {\n  var data = this.data(),\n      l = data.links[i],\n      from = data.nodes[l.from],\n      to = data.nodes[l.to];\n\n  var color = !u.isUndefined(l.color) ? this._findColor(l.color) :\n      Color.interpolate(this._findColor(from.color), this._findColor(to.color));\n\n  link.update(from.x, from.y, to.x, to.y, color);\n};\n\nGrapher.prototype._updateNode = function (node, i) {\n  var n = this.data().nodes[i];\n  node.update(n.x, n.y, n.r, this._findColor(n.color));\n};\n\nGrapher.prototype._updateNodeByIndex = function (i) { this._updateNode(this.nodes[i], i); };\n\nGrapher.prototype._updateLinkByIndex = function (i) { this._updateLink(this.links[i], i); };\n\n/**\n  * grapher._findLinks\n  * -------------------\n  *\n  * Search for links connected to the node indices provided.\n  *\n  * isLinked is a helper function that returns true if a link is\n  * connected to a node in indices.\n  */\nvar isLinked = function (indices, l) {\n  var i, len = indices.length, flag = false;\n  for (i = 0; i < len; i++) {\n    if (l.to == indices[i] || l.from == indices[i]) {\n      flag = true;\n      break;\n    }\n  }\n  return flag;\n};\n\nGrapher.prototype._findLinks = function (indices) {\n  var links = this.data().links,\n      i, numLinks = links.length,\n      updatingLinks = [];\n\n  for (i = 0; i < numLinks; i++) {\n    if (isLinked(indices, links[i])) updatingLinks.push(i);\n  }\n\n  return updatingLinks;\n};\n\n/**\n  * grapher._findColor\n  * -------------------\n  *\n  * Search for a color whether it's defined by palette index, string,\n  * integer.\n  */\nGrapher.prototype._findColor = function (c) {\n  return c || this.color();\n};\n\n/**\n  * grapher._getWebGL\n  * -------------------\n  *\n  *get webGL context if available\n  *\n  */\nGrapher.prototype._getWebGL = function () {\n  var gl = null;\n  try { gl = this.canvas.getContext(\"webgl\") || this.canvas.getContext(\"experimental-webgl\"); }\n  catch (x) { gl = null; }\n  return gl;\n};\n\n/**\n  * grapher._onContextLost\n  * ----------------------\n  *\n  * Handle context lost.\n  *\n  */\nGrapher.prototype._onContextLost = function (e) {\n  e.preventDefault();\n  if (this.currentFrame) cancelAnimationFrame(this.currentFrame);\n};\n\n/**\n  * grapher._onContextRestored\n  * --------------------------\n  *\n  * Handle context restored.\n  *\n  */\nGrapher.prototype._onContextRestored = function () {\n  var webGL = this._getWebGL();\n  this.renderer.initGL(webGL);\n  if (this.currentFrame) this.play(); // Play the graph if it was running.\n  else if (this.rendered) this.render();\n};\n\n\n/**\n  * Grapher Static Properties\n  * =========================\n  */\nvar NODES = Grapher.NODES = 'nodes';\nvar LINKS = Grapher.LINKS = 'links';\n\nmodule.exports = Grapher;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./grapher.js\n ** module id = 0\n ** module chunks = 0\n **/","var LinkVertexShaderSource = require('./shaders/link.vert.js'),\n    LinkFragmentShaderSource = require('./shaders/link.frag.js'),\n    NodeVertexShaderSource = require('./shaders/node.vert.js'),\n    NodeFragmentShaderSource = require('./shaders/node.frag.js'),\n    Renderer = require('../renderer.js');\n\nvar SQRT_2 = Math.sqrt(2);\n\nvar WebGLRenderer = Renderer.extend({\n  init: function (o) {\n    this.gl = o.webGL;\n\n    this.linkVertexShader = o.linkShaders && o.linkShaders.vertexCode || LinkVertexShaderSource;\n    this.linkFragmentShader = o.linkShaders && o.linkShaders.fragmentCode || LinkFragmentShaderSource;\n    this.nodeVertexShader = o.nodeShaders && o.nodeShaders.vertexCode ||  NodeVertexShaderSource;\n    this.nodeFragmentShader = o.nodeShaders && o.nodeShaders.fragmentCode || NodeFragmentShaderSource;\n\n\n    this._super(o);\n    this.initGL();\n\n    this.NODE_ATTRIBUTES = 9;\n    this.LINK_ATTRIBUTES = 6;\n  },\n\n  initGL: function (gl) {\n    if (gl) this.gl = gl;\n\n    this.linksProgram = this.initShaders(this.linkVertexShader, this.linkFragmentShader);\n    this.nodesProgram = this.initShaders(this.nodeVertexShader, this.nodeFragmentShader);\n\n    this.gl.linkProgram(this.linksProgram);\n    this.gl.linkProgram(this.nodesProgram);\n\n    this.gl.blendFuncSeparate(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA, this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\n    this.gl.enable(this.gl.BLEND);\n  },\n\n  initShaders: function (vertexShaderSource, fragmentShaderSource) {\n    var vertexShader = this.getShaders(this.gl.VERTEX_SHADER, vertexShaderSource);\n    var fragmentShader = this.getShaders(this.gl.FRAGMENT_SHADER, fragmentShaderSource);\n    var shaderProgram = this.gl.createProgram();\n    this.gl.attachShader(shaderProgram, vertexShader);\n    this.gl.attachShader(shaderProgram, fragmentShader);\n    return shaderProgram;\n  },\n\n  getShaders: function (type, source) {\n    var shader = this.gl.createShader(type);\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n    return shader;\n  },\n\n  updateNodesBuffer: function () {\n    var j = 0;\n    var nodeObjects = this.nodeObjects;\n    var n = nodeObjects.length;\n    var resolution = this.resolution;\n    var rScale = Math.abs(this.scale * resolution);\n    var nodes = this.nodes = new Float32Array(27 * n);\n\n    for (var i = 0; i < n; i++) {\n      var node = nodeObjects[i];\n      var cx = this.transformX(node.x) * resolution;\n      var cy = this.transformY(node.y) * resolution;\n      var r = node.r * rScale + 1;\n      // adding few px to keep shader area big enough for antialiasing pixesls\n      var shaderSize = r + 10;\n\n      nodes[j++] = (cx - shaderSize);\n      nodes[j++] = (cy - shaderSize);\n      nodes[j++] = node.color[0];\n      nodes[j++] = node.color[1];\n      nodes[j++] = node.color[2];\n      nodes[j++] = node.color[3];\n      nodes[j++] = cx;\n      nodes[j++] = cy;\n      nodes[j++] = r;\n\n      nodes[j++] = (cx + (1 + SQRT_2) * shaderSize);\n      nodes[j++] = cy - shaderSize;\n      nodes[j++] = node.color[0];\n      nodes[j++] = node.color[1];\n      nodes[j++] = node.color[2];\n      nodes[j++] = node.color[3];\n      nodes[j++] = cx;\n      nodes[j++] = cy;\n      nodes[j++] = r;\n\n      nodes[j++] = (cx - shaderSize);\n      nodes[j++] = (cy + (1 + SQRT_2) * shaderSize);\n      nodes[j++] = node.color[0];\n      nodes[j++] = node.color[1];\n      nodes[j++] = node.color[2];\n      nodes[j++] = node.color[3];\n      nodes[j++] = cx;\n      nodes[j++] = cy;\n      nodes[j++] = r;\n    }\n  },\n\n  updateLinksBuffer: function () {\n    var j = 0;\n    var linkObjects = this.linkObjects;\n    var n = linkObjects.length;\n    var links = this.links = new Float32Array(12 * n);\n\n    // transformX:\n    // (x * this.scale + this.translate[0]) * this.resolution\n    //\n    // transformY:\n    // (y * this.scale + this.translate[1]) * this.resolution\n    var xTranslation = this.resolution * this.translate[0];\n    var yTranslation = this.resolution * this.translate[1];\n    var scale = this.resolution * this.scale;\n\n    for (var i = 0; i < n; i++) {\n      var link = linkObjects[i];\n      var x1 = link.x1 * scale + xTranslation;\n      var y1 = link.y1 * scale + yTranslation;\n      var x2 = link.x2 * scale + xTranslation;\n      var y2 = link.y2 * scale + yTranslation;\n\n      links[j++] = x1;\n      links[j++] = y1;\n      links[j++] = link.color[0];\n      links[j++] = link.color[1];\n      links[j++] = link.color[2];\n      links[j++] = link.color[3];\n\n      links[j++] = x2;\n      links[j++] = y2;\n      links[j++] = link.color[0];\n      links[j++] = link.color[1];\n      links[j++] = link.color[2];\n      links[j++] = link.color[3];\n    }\n  },\n\n  resize: function (width, height) {\n    this._super(width, height);\n    this.gl.viewport(0, 0, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight);\n  },\n\n  render: function () {\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n\n    this.resize();\n    this.updateNodesBuffer();\n    this.updateLinksBuffer();\n    this.renderLinks(); // links have to be rendered first because of blending;\n    this.renderNodes();\n  },\n\n  renderLinks: function () {\n    var program = this.linksProgram;\n    this.gl.useProgram(program);\n\n    var linksBuffer = this.links;\n    var buffer = this.gl.createBuffer();\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, buffer);\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, linksBuffer, this.gl.STATIC_DRAW);\n\n    var resolutionLocation = this.gl.getUniformLocation(program, 'u_resolution');\n    this.gl.uniform2f(resolutionLocation, this.canvas.width, this.canvas.height);\n\n    var positionLocation = this.gl.getAttribLocation(program, 'a_position');\n    var rgbaLocation = this.gl.getAttribLocation(program, 'a_rgba');\n\n    this.gl.enableVertexAttribArray(positionLocation);\n    this.gl.enableVertexAttribArray(rgbaLocation);\n\n    this.gl.vertexAttribPointer(positionLocation, 2, this.gl.FLOAT, false, this.LINK_ATTRIBUTES  * Float32Array.BYTES_PER_ELEMENT, 0);\n    this.gl.vertexAttribPointer(rgbaLocation, 4, this.gl.FLOAT, false, this.LINK_ATTRIBUTES  * Float32Array.BYTES_PER_ELEMENT, 8);\n\n    var lineWidthRange = this.gl.getParameter(this.gl.ALIASED_LINE_WIDTH_RANGE), // ex [1,10]\n        lineWidth = this.lineWidth * Math.abs(this.scale * this.resolution),\n        lineWidthInRange = Math.min(Math.max(lineWidth, lineWidthRange[0]), lineWidthRange[1]);\n\n    this.gl.lineWidth(lineWidthInRange);\n    this.gl.drawArrays(this.gl.LINES, 0, this.links.length/this.LINK_ATTRIBUTES);\n  },\n\n  renderNodes: function () {\n    var program = this.nodesProgram;\n    this.gl.useProgram(program);\n\n    var nodesBuffer = this.nodes;\n    var buffer = this.gl.createBuffer();\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, buffer);\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, nodesBuffer, this.gl.STATIC_DRAW);\n\n    var resolutionLocation = this.gl.getUniformLocation(program, 'u_resolution');\n    this.gl.uniform2f(resolutionLocation, this.canvas.width, this.canvas.height);\n\n    var positionLocation = this.gl.getAttribLocation(program, 'a_position');\n    var rgbaLocation = this.gl.getAttribLocation(program, 'a_rgba');\n    var centerLocation = this.gl.getAttribLocation(program, 'a_center');\n    var radiusLocation = this.gl.getAttribLocation(program, 'a_radius');\n\n    this.gl.enableVertexAttribArray(positionLocation);\n    this.gl.enableVertexAttribArray(rgbaLocation);\n    this.gl.enableVertexAttribArray(centerLocation);\n    this.gl.enableVertexAttribArray(radiusLocation);\n\n    this.gl.vertexAttribPointer(positionLocation, 2, this.gl.FLOAT, false, this.NODE_ATTRIBUTES  * Float32Array.BYTES_PER_ELEMENT, 0);\n    this.gl.vertexAttribPointer(rgbaLocation, 4, this.gl.FLOAT, false, this.NODE_ATTRIBUTES  * Float32Array.BYTES_PER_ELEMENT, 8);\n    this.gl.vertexAttribPointer(centerLocation, 2, this.gl.FLOAT, false, this.NODE_ATTRIBUTES  * Float32Array.BYTES_PER_ELEMENT, 24);\n    this.gl.vertexAttribPointer(radiusLocation, 1, this.gl.FLOAT, false, this.NODE_ATTRIBUTES  * Float32Array.BYTES_PER_ELEMENT, 32);\n\n    this.gl.drawArrays(this.gl.TRIANGLES, 0, this.nodes.length / this.NODE_ATTRIBUTES);\n  }\n});\n\nmodule.exports = WebGLRenderer;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./renderers/gl/renderer.js\n ** module id = 1\n ** module chunks = 0\n **/","/*jshint multistr: true */\nmodule.exports = ' \\\n  uniform vec2 u_resolution; \\\n  attribute vec2 a_position; \\\n  attribute vec4 a_rgba; \\\n  varying vec4 rgba; \\\n  void main() { \\\n    vec2 clipspace = a_position / u_resolution * 2.0 - 1.0; \\\n    gl_Position = vec4(clipspace * vec2(1, -1), 0, 1); \\\n    rgba = a_rgba / 255.0; \\\n  }';\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./renderers/gl/shaders/link.vert.js\n ** module id = 2\n ** module chunks = 0\n **/","/*jshint multistr: true */\nmodule.exports = ' \\\n  precision mediump float; \\\n  varying vec4 rgba; \\\n  void main() { \\\n    gl_FragColor = rgba; \\\n  }';\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./renderers/gl/shaders/link.frag.js\n ** module id = 3\n ** module chunks = 0\n **/","/*jshint multistr: true */\nmodule.exports = ' \\\n  uniform vec2 u_resolution; \\\n  attribute vec2 a_position; \\\n  attribute vec4 a_rgba; \\\n  attribute vec2 a_center; \\\n  attribute float a_radius; \\\n  varying vec4 rgba; \\\n  varying vec2 center; \\\n  varying vec2 resolution; \\\n  varying float radius; \\\n  void main() { \\\n    vec2 clipspace = a_position / u_resolution * 2.0 - 1.0; \\\n    gl_Position = vec4(clipspace * vec2(1, -1), 0, 1); \\\n    rgba = a_rgba / 255.0; \\\n    radius = a_radius; \\\n    center = a_center; \\\n    resolution = u_resolution; \\\n  }';\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./renderers/gl/shaders/node.vert.js\n ** module id = 4\n ** module chunks = 0\n **/","/*jshint multistr: true */\nmodule.exports = ' \\\n  precision mediump float; \\\n  varying vec4 rgba; \\\n  varying vec2 center; \\\n  varying vec2 resolution; \\\n  varying float radius; \\\n  void main() { \\\n    vec4 color0 = vec4(0.0, 0.0, 0.0, 0.0); \\\n    float x = gl_FragCoord.x; \\\n    float y = resolution[1] - gl_FragCoord.y; \\\n    float dx = center[0] - x; \\\n    float dy = center[1] - y; \\\n    float distance = sqrt(dx * dx + dy * dy); \\\n    float diff = distance - radius; \\\n    if ( diff < 0.0 ) \\\n      gl_FragColor = rgba; \\\n    else if ( diff >= 0.0 && diff <= 1.0 ) \\\n      gl_FragColor = vec4(rgba.r, rgba.g, rgba.b, rgba.a - diff); \\\n    else  \\\n      gl_FragColor = color0; \\\n  }';\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./renderers/gl/shaders/node.frag.js\n ** module id = 5\n ** module chunks = 0\n **/",";(function () {\n\n  var Renderer = function () {\n    if ( !initializing && this.init )\n      this.init.apply(this, arguments);\n    return this;\n  };\n\n  Renderer.prototype = {\n    init: function (o) {\n      this.canvas = o.canvas;\n      this.lineWidth = o.lineWidth || 2;\n      this.resolution = o.resolution || 1;\n      this.scale = o.scale;\n      this.translate = o.translate;\n\n      this.resize();\n    },\n    setNodes: function (nodes) { this.nodeObjects = nodes; },\n    setLinks: function (links) { this.linkObjects = links; },\n    setScale: function (scale) { this.scale = scale; },\n    setTranslate: function (translate) { this.translate = translate; },\n    transformX: function (x) { return x * this.scale + this.translate[0]; },\n    transformY: function (y) { return y * this.scale + this.translate[1]; },\n    untransformX: function (x) { return (x - this.translate[0]) / this.scale; },\n    untransformY: function (y) { return (y - this.translate[1]) / this.scale; },\n    resize: function (width, height) {\n      var displayWidth  = (width || this.canvas.clientWidth) * this.resolution;\n      var displayHeight = (height || this.canvas.clientHeight) * this.resolution;\n\n      if (this.canvas.width != displayWidth) this.canvas.width  = displayWidth;\n      if (this.canvas.height != displayHeight) this.canvas.height = displayHeight;\n    }\n  };\n\n  var initializing = false;\n\n  Renderer.extend = function (prop) {\n    var _super = this.prototype;\n\n    initializing = true;\n    var prototype = new this();\n    initializing = false;\n\n    prototype._super = this.prototype;\n    for (var name in prop) {\n      prototype[name] = typeof prop[name] == \"function\" &&\n        typeof _super[name] == \"function\" && /\\b_super\\b/.test(prop[name]) ?\n        (function(name, fn){\n          return function() {\n            var tmp = this._super;\n           \n            // Add a new ._super() method that is the same method\n            // but on the super-class\n            this._super = _super[name];\n           \n            // The method only need to be bound temporarily, so we\n            // remove it when we're done executing\n            var ret = fn.apply(this, arguments);\n            this._super = tmp;\n           \n            return ret;\n          };\n        })(name, prop[name]) :\n        prop[name];\n    }\n\n    // The dummy class constructor\n    function Renderer () {\n      // All construction is actually done in the init method\n      if ( !initializing && this.init )\n        this.init.apply(this, arguments);\n    }\n   \n    // Populate our constructed prototype object\n    Renderer.prototype = prototype;\n   \n    // Enforce the constructor to be what we expect\n    Renderer.prototype.constructor = Renderer;\n \n    // And make this class extendable\n    Renderer.extend = arguments.callee;\n   \n    return Renderer;\n  };\n\n  if (module && module.exports) module.exports = Renderer;\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./renderers/renderer.js\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webpack/buildin/module.js\n ** module id = 7\n ** module chunks = 0\n **/","var Renderer = require('../renderer.js');\n\nvar CanvasRenderer = Renderer.extend({\n  init: function (o) {\n    this._super(o);\n    this.context = this.canvas.getContext('2d');\n  },\n\n  render: function () {\n    this.resize();\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.renderLinks();\n    this.renderNodes();\n  },\n\n  renderNodes: function () {\n    for (var i = 0 ; i < this.nodeObjects.length; i ++) {\n      var node = this.nodeObjects[i];\n      var cx = this.transformX(node.x) * this.resolution;\n      var cy = this.transformY(node.y) * this.resolution;\n      var r = node.r * Math.abs(this.scale * this.resolution);\n\n      this.context.beginPath();\n      this.context.arc(cx, cy, r, 0, 2 * Math.PI, false);\n      this.context.fillStyle = 'rgba(' + node.color.join(',') + ')';\n      this.context.fill();\n    }\n  },\n\n  renderLinks: function () {\n    for (var i = 0 ; i < this.linkObjects.length; i ++) {\n      var link = this.linkObjects[i];\n      var x1 = this.transformX(link.x1) * this.resolution;\n      var y1 = this.transformY(link.y1) * this.resolution;\n      var x2 = this.transformX(link.x2) * this.resolution;\n      var y2 = this.transformY(link.y2) * this.resolution;\n\n      this.context.beginPath();\n      this.context.moveTo(x1, y1);\n      this.context.lineTo(x2, y2);\n      this.context.lineWidth = this.lineWidth * Math.abs(this.scale * this.resolution);\n      this.context.strokeStyle = 'rgba(' + link.color.join(',') + ')';\n      this.context.stroke();\n    }\n  }\n});\n\nmodule.exports = CanvasRenderer;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./renderers/canvas/renderer.js\n ** module id = 8\n ** module chunks = 0\n **/","// Ayasdi Inc. Copyright 2014\n// Color.js may be freely distributed under the Apache 2.0 license\n\n/**\n  * Color.js\n  * ========\n  * Color helper.\n  *\n  * Colors parsed by this helper will be in the format:\n  * [r, g, b, a]\n  * where each color attribute is a value between 0-255.\n  */\n\nmodule.exports = {\n  interpolate: interpolate\n};\n\nfunction interpolate (a, b, amt) {\n  amt = amt === undefined ? 0.5 : amt;\n  var interpolated = a.map(function (colorA, index) {\n    var colorB = b[index];\n    return colorA + (colorB - colorA) * amt;\n  });\n  return interpolated;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./helpers/color.js\n ** module id = 9\n ** module chunks = 0\n **/","function Link () {\n  this.x1 = 0;\n  this.y1 = 0;\n  this.x2 = 0;\n  this.y2 = 0;\n  this.color = null;\n  return this;\n}\n\nLink.prototype.update = function (x1, y1, x2, y2, color) {\n  this.x1 = x1;\n  this.y1 = y1;\n  this.x2 = x2;\n  this.y2 = y2;\n  this.color = color;\n  return this;\n};\n\nmodule.exports = Link;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./helpers/link.js\n ** module id = 10\n ** module chunks = 0\n **/","function Node () {\n  this.x = 0;\n  this.y = 0;\n  this.r = 10;\n  this.color = null;\n  return this;\n}\n\nNode.prototype.update = function (x, y, r, color) {\n  this.x = x;\n  this.y = y;\n  this.r = r;\n  this.color = color;\n  return this;\n};\n\nmodule.exports = Node;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./helpers/node.js\n ** module id = 11\n ** module chunks = 0\n **/",";(function () {\n  function Shaders (obj) {\n    this.vertexCode = obj && obj.vertexCode || null;\n    this.fragmentCode = obj && obj.fragmentCode || null;\n    return this;\n  }\n\n  Shaders.prototype.addVertexAttr = function (name, value, size, type, normalized) {\n    var attrs = {\n      name: name,\n      value: value,\n      size: size,\n      type: type,\n      normalized: normalized\n    };\n\n    this.vertexAttrs.push(attrs);\n  };\n\n  Shaders.prototype.addUniformAttr = function (name, value) {\n    var attrs = {\n      name: name,\n      value: value\n    };\n\n    this.uniformAttrs.push(attrs);\n  };\n\n  if (module && module.exports) module.exports = Shaders;\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./helpers/shaders.js\n ** module id = 12\n ** module chunks = 0\n **/","/**\n * Utilities\n * =========\n *\n * Various utility functions\n */\nvar Utilities = module.exports = {\n  each: each,\n  eachPop: eachPop,\n  eachKey: eachKey,\n  map: map,\n  clean: clean,\n  range: range,\n  sortedIndex: sortedIndex,\n  indexOf: indexOf,\n  uniqueInsert: uniqueInsert,\n  extend: extend,\n  bind: bind,\n  noop: noop,\n  isUndefined: isUndefined,\n  isFunction: isFunction,\n  isObject: isObject,\n  isArray: Array.isArray,\n  isNumber: isNumber,\n  isNaN: isNaN\n};\n\n/**\n * noop\n * -----\n *\n * A function that does nothing.\n */\nfunction noop () {}\n\n/**\n * each\n * -----\n *\n * Perform an operation on each element in an array.\n *\n *     var arr = [1, 2, 3];\n *     u.each(arr, fn);\n */\nfunction each (arr, fn, ctx) {\n  fn = bind(fn, ctx);\n  var i = arr.length;\n  while (--i > -1) {\n    fn(arr[i], i);\n  }\n  return arr;\n}\n\n/**\n * eachPop\n * -------\n *\n * Perform a function on each element in an array. Faster than each, but won't pass index and the\n * array will be cleared.\n *\n *     u.eachPop([1, 2, 3], fn);\n */\nfunction eachPop (arr, fn, ctx) {\n  fn = bind(fn, ctx);\n  while (arr.length) {\n    fn(arr.pop());\n  }\n  return arr;\n}\n\n/**\n * eachKey\n * -------\n *\n * Perform a function on each property in an object.\n *\n *     var obj = {foo: 0, bar: 0};\n *     u.eachKey(obj, fn);\n */\nfunction eachKey (obj, fn, ctx) {\n  fn = bind(fn, ctx);\n  if (isObject(obj)) {\n    var keys = Object.keys(obj);\n\n    while (keys.length) {\n      var key = keys.pop();\n      fn(obj[key], key);\n    }\n  }\n  return obj;\n}\n\n/**\n * map\n * -----\n *\n * Get a new array with values calculated from original array.\n *\n *     var arr = [1, 2, 3];\n *     var newArr = u.map(arr, fn);\n */\nfunction map (arr, fn, ctx) {\n  fn = bind(fn, ctx);\n  var i = arr.length,\n      mapped = new Array(i);\n  while (--i > -1) {\n    mapped[i] = fn(arr[i], i);\n  }\n  return mapped;\n}\n\n/**\n * clean\n * -----\n *\n * Clean an array by reference.\n *\n *     var arr = [1, 2, 3];\n *     u.clean(arr); // arr = []\n */\nfunction clean (arr) {\n  eachPop(arr, noop);\n  return arr;\n}\n\n/**\n * range\n * -----\n *\n * Create an array of numbers from start to end, incremented by step.\n */\nfunction range (start, end, step) {\n  step = isNumber(step) ? step : 1;\n  if (isUndefined(end)) {\n    end = start;\n    start = 0;\n  }\n\n  var i = Math.max(Math.ceil((end - start) / step), 0),\n      result = new Array(i);\n\n  while (--i > -1) {\n    result[i] = start + (step * i);\n  }\n  return result;\n}\n\n/**\n * sortedIndex\n * -----------\n *\n * Finds the sorted position of a number in an Array of numbers.\n */\nfunction sortedIndex (arr, n) {\n  var min = 0,\n      max = arr.length;\n\n  while (min < max) {\n    var mid = min + max >>> 1;\n    if (n < arr[mid]) max = mid;\n    else min = mid + 1;\n  }\n\n  return min;\n}\n\n/**\n * indexOf\n * -------\n *\n * Finds the index of a variable in an array.\n * Returns -1 if not found.\n */\nfunction indexOf (arr, n) {\n  var i = arr.length;\n  while (--i > -1) {\n    if (arr[i] === n) return i;\n  }\n  return i;\n}\n\n/**\n * uniqueInsert\n * ------------\n *\n * Inserts a value into an array only if it does not already exist\n * in the array.\n */\nfunction uniqueInsert (arr, n) {\n  if (indexOf(arr, n) === -1) arr.push(n);\n  return arr;\n}\n\n/**\n * extend\n * ------\n *\n * Extend an object with the properties of one other objects\n */\nfunction extend (obj, source) {\n  if (isObject(obj) && isObject(source)) {\n    var props = Object.getOwnPropertyNames(source),\n      i = props.length;\n    while (--i > -1) {\n      var prop = props[i];\n      obj[prop] = source[prop];\n    }\n  }\n  return obj;\n}\n\n/**\n   * bind\n   * ----\n   *\n   * Bind a function to a context. Optionally pass in the number of arguments\n   * which will use the faster fn.call if the number of arguments is 0, 1, or 2.\n   */\nfunction bind (fn, ctx) {\n  if (!ctx) return fn;\n  return function () { return fn.apply(ctx, arguments); };\n}\n\n/**\n * isUndefined\n * -----------\n *\n * Checks if a variable is undefined.\n */\nfunction isUndefined (o) {\n  return typeof o === 'undefined';\n}\n\n/**\n * isFunction\n * ----------\n *\n * Checks if a variable is a function.\n */\nfunction isFunction (o) {\n  return typeof o === 'function';\n}\n\n/**\n * isObject\n * --------\n *\n * Checks if a variable is an object.\n */\nfunction isObject (o) {\n  return typeof o === 'object' && !!o;\n}\n\n/**\n * isNumber\n * --------\n *\n * Checks if a variable is a number.\n */\nfunction isNumber (o) {\n  return typeof o === 'number';\n}\n\n/**\n * isNaN\n * -----\n *\n * Checks if a variable is NaN.\n */\nfunction isNaN (o) {\n  return isNumber(o) && o !== +o;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./helpers/utilities.js\n ** module id = 13\n ** module chunks = 0\n **/"],"sourceRoot":""}